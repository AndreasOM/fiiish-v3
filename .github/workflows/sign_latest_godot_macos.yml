name: Sign macOS
on: 
  workflow_dispatch:
  #push:
  #  tags:
  #    - "v*"
    # We always build on a tag
    # paths:
    #  - godot/**

jobs:
  build:
    runs-on: macos-14
    defaults:
      run:
        # Use bash shells on all platforms.
        shell: bash
    steps:
      - name: Create variables
        run: |
          PROJECT=fiiish-v3
          echo "PROJECT=${PROJECT}" >> $GITHUB_ENV
          BUILD_TYPE="macOS"
          echo "BUILD_TYPE=${BUILD_TYPE}" >> $GITHUB_ENV
          LATEST_FILE=${PROJECT}-${BUILD_TYPE}-latest.txt
          echo "LATEST_FILE=${LATEST_FILE}" >> $GITHUB_ENV
          S3_LATEST_FILE=s3://artifacts.omnimad.net/${PROJECT}/${LATEST_FILE}
          echo "S3_LATEST_FILE=${S3_LATEST_FILE}" >> $GITHUB_ENV

      - name: Get latest reference
        run: |
          #
          # get latest info
          #
          aws s3 cp ${{ env.S3_LATEST_FILE }} ${{ env.LATEST_FILE }}
          # cat ${{ env.LATEST_FILE }}
          LATEST=$(cat ${{ env.LATEST_FILE }})
          #
          # split into parts
          #
          ARCHIVE_FOLDER=$( dirname ${LATEST} )
          ARCHIVE_NAME=$( basename ${LATEST} .tgz )
          ARCHIVE_EXT=.tgz
          #
          # combine
          #
          ARCHIVE_FILE=${ARCHIVE_NAME}${ARCHIVE_EXT}
          S3_ARCHIVE_FILE=s3://artifacts.omnimad.net/${LATEST}
          SIGNED_ARCHIVE_FILE=${ARCHIVE_NAME}-signed.tgz
          SIGNED_S3_ARCHIVE_FILE=${ARCHIVE_FOLDER}/${SIGNED_ARCHIVE_FILE}
          #
          # put into github env
          #
          echo "ARCHIVE_FILE=${ARCHIVE_FILE}" >> $GITHUB_ENV
          echo "S3_ARCHIVE_FILE=${S3_ARCHIVE_FILE}" >> $GITHUB_ENV
          echo "SIGNED_ARCHIVE_FILE=${SIGNED_ARCHIVE_FILE}" >> $GITHUB_ENV
          echo "SIGNED_S3_ARCHIVE_FILE=${SIGNED_S3_ARCHIVE_FILE}" >> $GITHUB_ENV

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"

      - name: Download artifact
        run: |
          aws s3 cp ${{ env.S3_ARCHIVE_FILE }} ${{ env.ARCHIVE_FILE }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"

      - name: Unpack artifact
        run: |
          tar xzvf ${{ env.ARCHIVE_FILE }}
          find ${{ env.PROJECT }}-${{ env.BUILD_TYPE }}

      - name: Prepare keychain
        run: |
          keychain_password="$(openssl rand -hex 32)"
          security create-keychain -p "${keychain_password}" "the-keychain"
          echo "${{ secrets.CODESIGN_CERT }}" | base64 --decode > cert.p12
          md5 < cert.p12
          keychain_db="${HOME}/Library/Keychains/the-keychain-db"
          security import cert.p12 -k "${keychain_db}" -P "${{ secrets.CODESIGN_CERT_PASS }}" -T "$(command -v codesign)"
          security set-key-partition-list -S "apple-tool:,apple:" -s -k "${keychain_password}" "${keychain_db}"
          security default-keychain -d "user" -s "${keychain_db}"
          security find-identity -v

      - name: Create Summary
        if: always()
        run: |
          echo "| ARCHIVE_FILE | ${{ env.ARCHIVE_FILE }} |" >> $GITHUB_STEP_SUMMARY
          echo "| S3_ARCHIVE_FILE | ${{ env.S3_ARCHIVE_FILE }} |" >> $GITHUB_STEP_SUMMARY
          echo "| SIGNED_ARCHIVE_FILE | ${{ env.SIGNED_ARCHIVE_FILE }} |" >> $GITHUB_STEP_SUMMARY
          echo "| SIGNED_S3_ARCHIVE_FILE | ${{ env.SIGNED_S3_ARCHIVE_FILE }} |" >> $GITHUB_STEP_SUMMARY

#      - name: Upload -> Download artifact
#        run: |
#          cd godot/export
#         echo ${{ env.VERSION }} > ${{ env.PROJECT }}-${{ env.BUILD_TYPE }}/version.txt
#         tar czvf ${{ env.ARCHIVE_FILE }} ${{ env.PROJECT }}-${{ env.BUILD_TYPE }}
#         aws s3 cp ${{ env.ARCHIVE_FILE }} ${{ env.S3_ARCHIVE_FILE }}
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_DEFAULT_REGION: "eu-west-1"


#      - name: Create Summary
#        if: always()
#        run: |
##          echo "| COMMIT_HASH      | ${{ env.COMMIT_HASH }}     |" >> $GITHUB_STEP_SUMMARY
##          echo "| :----------- | ---------------------: |" >> $GITHUB_STEP_SUMMARY
##          echo "| COMMIT_DATE      | ${{ env.COMMIT_DATE }}     |" >> $GITHUB_STEP_SUMMARY
##          echo "| ARCHIVE_FILE      | ${{ env.ARCHIVE_FILE }}     |" >> $GITHUB_STEP_SUMMARY
#          echo "| BUILD_TYPE      | ${{ env.BUILD_TYPE }}     |" >> $GITHUB_STEP_SUMMARY
##          echo "| BINARY      | ${{ env.BINARY }}     |" >> $GITHUB_STEP_SUMMARY
#          echo "| LATEST_FILE      | ${{ env.LATEST_FILE }}     |" >> $GITHUB_STEP_SUMMARY
##          echo "| S3_ARCHIVE_FILE      | \`${{ env.S3_ARCHIVE_FILE }}\`     |" >> $GITHUB_STEP_SUMMARY
#          echo "| S3_LATEST_FILE      | \`${{ env.S3_LATEST_FILE }}\`     |" >> $GITHUB_STEP_SUMMARY
##          echo "| VERSION      | \`${{ env.VERSION }}\`     |" >> $GITHUB_STEP_SUMMARY

