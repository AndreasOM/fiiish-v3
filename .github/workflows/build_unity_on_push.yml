name: Build Unity WebGL on push
on: 
  workflow_dispatch:
  push:
    tags:
      # - "v*"
    paths:
      - unity/**

jobs:
  build:
    runs-on: ubicloud-standard-4
    defaults:
      run:
        # Use bash shells on all platforms.
        shell: bash
    steps:
      - name: Install ffmpeg
        run: sudo apt-get install -y ffmpeg

      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            unity
          fetch-depth: 1

      - name: Cache Unity
        id: cache-unity
        uses: ubicloud/cache@v4
        with:
          path: ~/Unity
          key: ${{ runner.os }}-unity

      - name: Check Unity cache
        if: steps.cache-primes.outputs.cache-hit == 'true'
        run: |
          echo "Unity cache was hit"
          du -sch Unity

      - name: Setup Unity
        uses: RageAgainstThePixel/unity-setup@v1
        with:
          # version-file: 'path/to/your/ProjectSettings.ProjectVersion.txt'
          # unity-version: ${{ matrix.unity-versions }} # overrides version in version-file
          build-targets: WebGL
          modules: webgl

      - name: Activate unity
        uses: RageAgainstThePixel/activate-unity-license@v1
        with:
          license: 'Personal' # Choose license type to use [ Personal, Professional, Floating ]
          username: ${{ secrets.UNITY_USERNAME }}
          password: ${{ secrets.UNITY_PASSWORD }}

#      - name: Fix version info
#        run: |
#          .github/helpers/update_version_info.sh Web-demo
#

      - name: Export WebGL Demo
        run: |
          cd unity
          /home/runner/Unity/Hub/Editor/6000.0.24f1/Editor/Unity --verbose --headless --quit --batchmode -projectpath fiiish-v3 -activeBuildProfile Assets/Settings/Build\ Profiles/Web\ Demo.asset -build ../export/web-demo

      - name: Check result
        run: |
          cd unity
          find export

      - name: Update alpha
        run: |
          cd unity
          aws s3 sync export/web-demo/ s3://games.omnimad.net/alpha/fiiish-v3/unity/
          aws s3 cp s3://games.omnimad.net/alpha/fiiish-v3/unity/Build/web-demo.wasm.br s3://games.omnimad.net/alpha/fiiish-v3/unity/Build/ --content-encoding br
          aws s3 cp s3://games.omnimad.net/alpha/fiiish-v3/unity/Build/web-demo.data.br s3://games.omnimad.net/alpha/fiiish-v3/unity/Build/ --content-encoding br
          aws s3 cp s3://games.omnimad.net/alpha/fiiish-v3/unity/Build/web-demo.framework.js.br s3://games.omnimad.net/alpha/fiiish-v3/unity/Build/ --content-encoding br
          # for f in $(aws s3 ls s3://games.omnimad.net/alpha/fiiish-v3/unity/ --recursive|grep ".br$" |cut -b32-); do aws s3 cp s3://games.omnimad.net/${f} s3://games.omnimad.net/${f} --content-encoding br; done
          aws cloudfront create-invalidation --distribution-id E323IOZK579VPC --paths "/alpha/fiiish-v3/unity/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"
