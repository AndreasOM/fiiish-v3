name: ðŸš‚ Push latest to steam
run-name: ðŸš‚ Push latest to itchio ${{ vars.PROJECT }} - ${{ inputs.build_type }} by @${{ github.actor }}
on: 
  workflow_dispatch:
    inputs:
      sub_type:
        description: 'The sub_type of build'
        required: true
        default: 'demo-classic'
        type: choice
        options:
          - 'demo-classic'
  workflow_call:
    inputs:
      build_type:
        description: 'The sub_type of build'
        required: true
        type: string
      summary_style:
        description: 'The style for the summary'
        default: 'full'
        required: false
        type: string

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: "eu-west-1"

jobs:
  push:
    runs-on: ubuntu-latest
    defaults:
      run:
        # Use bash shells on all platforms.
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/helpers
            steam/templates
          fetch-depth: 1
#          submodules: true

      - name: Create variables
        run: |
          PROJECT=${{ vars.PROJECT }}
          SUB_TYPE=${{ inputs.sub_type }}
          TARGET_FOLDER="temp-steam"

          #
          # put into github env
          #
          {
            echo "PROJECT=${PROJECT}"
            echo "SUB_TYPE=${SUB_TYPE}"
            echo "TARGET_FOLDER=${TARGET_FOLDER}"
          } >> "$GITHUB_ENV"

      - name: Setup steamcmd
        uses: CyberAndrii/setup-steamcmd@v1

      - name: Check steamcmd
        run: |
          which steamcmd

#      - name: Set steam guard code
#        run: |
#          if [[ "x${{ secrets.STEAM_GUARD_CODE }}" != "x" ]]
#          then
#            steamcmd +set_steam_guard_code ${{ secrets.STEAM_GUARD_CODE }} +quit
#            gh secret remove STEAM_GUARD_CODE
#          fi
#
#      - name: Login to steam
#        run: |
#          steamcmd +login ${{ secrets.STEAM_USER }} ${{ secrets.STEAM_PASSWORD }} +quit

      - name: Download latest linux from S3
        run: |
          .github/helpers/download_latest.sh ${{ env.TARGET_FOLDER }} linux-${{ env.SUB_TYPE }}

      - name: Download latest macos from S3
        run: |
          .github/helpers/download_latest.sh ${{ env.TARGET_FOLDER }} macos-${{ env.SUB_TYPE }}

      - name: Download latest windows from S3
        run: |
          .github/helpers/download_latest.sh ${{ env.TARGET_FOLDER }} windows-${{ env.SUB_TYPE }}

      - name: Create .VDFs
        run: |
          .github/helpers/steam_create_vdf.sh ${{ env.TARGET_FOLDER }} ${{ env.SUB_TYPE }}

      - name: Upload to steam
        run: |
          cd ${TARGET_FOLDER}
          CWD=$(pwd)
          cd -
          steamcmd +login ${{ secrets.STEAM_USER }} ${{ secrets.STEAM_PASSWORD }} +run_app_build "${CWD}/AppBuild_${{ env.SUB_TYPE }}.vdf" +quit

      - name: Create Summary
        if: always()
        run: |
          echo "Summary Style: '${{ inputs.summary_style }}'"
          if [[ "${{ inputs.summary_style }}" == "skip" ]]
          then
            echo "Skipping summary"
          elif [[ "${{ inputs.summary_style }}" == "minimal" ]]
          then
            {
              echo "|                        |                                   |"
              echo "| :--------------------- | --------------------------------: |"
              echo "| VERSION                | ${{ env.VERSION }}                |"
            } >> "$GITHUB_STEP_SUMMARY"
          else
            {
              echo "|                        |                                   |"
              echo "| :--------------------- | --------------------------------: |"
              echo "| macos_VERSION          | ${{ env.macos_VERSION }}          |"
              echo "| linux_VERSION          | ${{ env.linux_VERSION }}          |"
              echo "| windows_VERSION        | ${{ env.windows_VERSION }}        |"
            } >> "$GITHUB_STEP_SUMMARY"
          fi
