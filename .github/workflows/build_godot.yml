name: Build WebGL - manually
on: 
  workflow_dispatch:
  push:
    # tags:
      # - "v*"
    paths:
      - godot/**
      - .github/workflows/**

jobs:
  build:
    runs-on: ubicloud-standard-4
    defaults:
      run:
        # Use bash shells on all platforms.
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            godot
          fetch-depth: 1

      - name: Create variables
        run: |
          PROJECT=fiiish-v3
          COMMIT_HASH=$(git rev-parse --short HEAD)
          COMMIT_DATE=$(git show -s --format=%ci HEAD|cut -b1-10)
          BUILD_TYPE="Web-demo"
          VERSION=$(git tag --points-at HEAD)
          if [[ ${VERSION} == "" ]]
          then
           echo "NO VERSION -- using v0.0.0"
           VERSION="v0.0.0"
          fi
          if [[ ${VERSION} != v* ]]
          then
            echo "Invalid version. Use vx.y.z"
            exit 255
          fi
          VERSION=${VERSION#"v"}
          {
            echo "PROJECT=${PROJECT}"
            echo "COMMIT_HASH=${COMMIT_HASH}"
            echo "COMMIT_DATE=${COMMIT_DATE}"
            echo "BUILD_TYPE=${BUILD_TYPE}"
            echo "VERSION=${VERSION}"
          } >> "$GITHUB_ENV"

      - name: Setup Godot
        uses: chickensoft-games/setup-godot@v2
        with:
          version: 4.4.0
          use-dotnet: false
          include-templates: true
      - name: Verify setup
        run: |
          godot --version

      - name: Fix version info
        run: |
          .github/helpers/update_version_info.sh ${{ env.BUILD_TYPE }}

      - name: Install GraphicsMagick
        run: |
          sudo apt -y install graphicsmagick

      - name: Bake Version into Splash
        run: |
          LEFT_TEXT=""
          if [[ ${{ env.VERSION }} == "0.0.0" ]]
          then
            LEFT_TEXT="${{ env.COMMIT_HASH }}"
          fi
          RIGHT_TEXT="v${{ env.VERSION }}"
          gm convert \
            -verbose \
            -fill "#2dbac9" \
            -pointsize 72 \
            -font godot/Fonts/all_things_pink.ttf \
            -draw "text 1520,1040 '${RIGHT_TEXT}'" \
            -draw "text 300,1040 '${LEFT_TEXT}'" \
            godot/Textures/Loadingscreen/loadingscreen.png \
            godot/Textures/Loadingscreen/loadingscreen-with-version.png

      - name: Import project
        run: |
          cd godot
          godot --headless --quit || exit 0

      - name: Export WebGL
        run: |
          cd godot
          mkdir -p export/webgl-demo
          godot --headless --export-debug ${{ env.BUILD_TYPE }} export/webgl-demo/fiiish-v3.html --quit || exit 0

      - name: Check result
        run: |
          cd godot
          find export

      - name: Update alpha
        run: |
          cd godot
          aws s3 sync export/webgl-demo/ s3://games.omnimad.net/alpha/fiiish-v3/
          aws cloudfront create-invalidation --distribution-id E323IOZK579VPC --paths "/alpha/fiiish-v3/*"
          echo "PLAY_URL=https://games.omnimad.net/alpha/fiiish-v3/fiiish-v3.html" >> "$GITHUB_ENV"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"

      - name: Create Summary
        if: always()
        run: |
          {
            echo "|                     |                                    |"
            echo "| :------------------ | ---------------------------------: |"
            echo "| PROJECT             | ${{ env.PROJECT }}                 |"
            echo "| COMMIT_HASH         | ${{ env.COMMIT_HASH }}             |"
            echo "| COMMIT_DATE         | ${{ env.COMMIT_DATE }}             |"
            echo "| VERSION             | \`${{ env.VERSION }}\`             |"
            echo "| PLAY_URL            | ${{ env.PLAY_URL }}                |"
          } >> "$GITHUB_STEP_SUMMARY"
