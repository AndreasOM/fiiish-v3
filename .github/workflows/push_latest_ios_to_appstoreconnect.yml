name: ðŸ“± iOS - ðŸ’¾ Push to App Store Connect
on: 
  workflow_dispatch:
  workflow_call:    
    inputs:
      summary_style:
        description: 'The style for the summary'
        default: 'full'
        required: false
        type: string
    outputs:
      version:
        description: "The version of the build"
        value: ${{ jobs.push.outputs.version }}
      build_number:
        description: "The build number of the build"
        value: ${{ jobs.push.outputs.build_number }}

jobs:
  push:
    runs-on: macos-15
    defaults:
      run:
        # Use bash shells on all platforms.
        shell: bash
    outputs:
      version: ${{ steps.check_version.outputs.version }}        
      build_number: ${{ steps.check_version.outputs.build_number }}        
    steps:
      - name: Create variables
        run: |
          PROJECT=${{ vars.PROJECT }}
          BUILD_TYPE="ios"
          LATEST_FILE="${PROJECT}-${BUILD_TYPE}-latest.txt"
          S3_LATEST_FILE="s3://artifacts.omnimad.net/${PROJECT}/${LATEST_FILE}"
          #
          # put into github env
          #
          {
            echo "PROJECT=${PROJECT}"
            echo "BUILD_TYPE=${BUILD_TYPE}"
            echo "LATEST_FILE=${LATEST_FILE}"
            echo "S3_LATEST_FILE=${S3_LATEST_FILE}"
          } >> "$GITHUB_ENV"

      - name: Get latest reference
        run: |
          #
          # get latest info
          #
          aws s3 cp ${{ env.S3_LATEST_FILE }} ${{ env.LATEST_FILE }}
          # cat ${{ env.LATEST_FILE }}
          LATEST=$(cat "${{ env.LATEST_FILE }}")
          #
          # split into parts
          #
          ARCHIVE_FOLDER=$( dirname "${LATEST}" )
          ARCHIVE_NAME=$( basename "${LATEST}" .tgz )
          ARCHIVE_EXT=.tgz
          #
          # combine
          #
          ARCHIVE_FILE="${ARCHIVE_NAME}${ARCHIVE_EXT}"
          S3_ARCHIVE_FILE="s3://artifacts.omnimad.net/${LATEST}"
          SIGNED_ARCHIVE_FILE="${ARCHIVE_NAME}-signed.tgz"
          SIGNED_S3_ARCHIVE_FILE="s3://artifacts.omnimad.net/${ARCHIVE_FOLDER}/${SIGNED_ARCHIVE_FILE}"
          #
          # put into github env
          #
          {
            echo "ARCHIVE_FILE=${ARCHIVE_FILE}"
            echo "S3_ARCHIVE_FILE=${S3_ARCHIVE_FILE}"
            echo "SIGNED_ARCHIVE_FILE=${SIGNED_ARCHIVE_FILE}"
            echo "SIGNED_S3_ARCHIVE_FILE=${SIGNED_S3_ARCHIVE_FILE}"
          } >> "$GITHUB_ENV"

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"

      - name: Download signed artifact
        run: |
          aws s3 cp ${{ env.SIGNED_S3_ARCHIVE_FILE }} ${{ env.SIGNED_ARCHIVE_FILE }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"

      - name: Unpack artifact
        run: |
          tar xzvf ${{ env.SIGNED_ARCHIVE_FILE }}
          find ${{ env.PROJECT }}-${{ env.BUILD_TYPE }}

      - name: Check version
        id: check_version
        run: |
          cd fiiish-v3-${{ env.BUILD_TYPE }}
          VERSION=$(cat version.txt)
          if [[ -z ${VERSION} ]]
          then
            echo "No version"
            #### exit 255
          else
            echo "version: ${VERSION}"
          fi
          BUILD_NUMBER=$(cat build_number.txt)
          {
            echo "version=v${VERSION}"
            echo "build_number=${BUILD_NUMBER}"
          } >> "$GITHUB_OUTPUT"
          {
            echo "VERSION=${VERSION}"
            echo "BUILD_NUMBER=${BUILD_NUMBER}"
          } >> "$GITHUB_ENV"

      - name: Install AppStore key
        run: |
          mkdir -p ~/.appstoreconnect/private_keys/
          echo ${{ secrets.APP_STORE_API_PRIVATE_KEY }} | base64 -d -o ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8
          grep  "BEGIN" ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8
          ls -l ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8
          md5 ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8
          
      - name: Upload package
        run: |
          xcrun altool \
            --upload-package fiiish-v3.ipa \
            --type ios \
            --apple-id "6743671388" \
            --bundle-version "${{ env.BUILD_NUMBER }}" \
            --bundle-short-version-string "${{ env.VERSION }}" \
            --bundle-id "net.omnimad.fiiish-v3" \
            --apiKey ${{ secrets.APPSTORE_API_KEY_ID }} --apiIssuer ${{ secrets.APPSTORE_ISSUER_ID }}

            # --asc-public-id ... \

        working-directory: fiiish-v3-${{ env.BUILD_TYPE }}

      - name: Create Summary
        if: always()
        run: |
          if [[ "${{ inputs.summary_style }}" == "skip" ]]
          then
            echo "Skipping summary"
          elif [[ "${{ inputs.summary_style }}" == "minimal" ]]
          then
            {
              echo "|                        |                                   |"
              echo "| :--------------------- | --------------------------------: |"
              echo "| VERSION                | ${{ env.VERSION }}                |"
              echo "| BUILD_NUMBER           | ${{ env.BUILD_NUMBER }}           |"
            } >> "$GITHUB_STEP_SUMMARY"
          else
            {
              echo "|                        |                                   |"
              echo "| :--------------------- | --------------------------------: |"
              echo "| ARCHIVE_FILE           | ${{ env.ARCHIVE_FILE }}           |"
              echo "| S3_ARCHIVE_FILE        | ${{ env.S3_ARCHIVE_FILE }}        |"
              echo "| SIGNED_ARCHIVE_FILE    | ${{ env.SIGNED_ARCHIVE_FILE }}    |"
              echo "| SIGNED_S3_ARCHIVE_FILE | ${{ env.SIGNED_S3_ARCHIVE_FILE }} |"
              echo "| VERSION                | ${{ env.VERSION }}                |"
              echo "| BUILD_NUMBER           | ${{ env.BUILD_NUMBER }}           |"
            } >> "$GITHUB_STEP_SUMMARY"
          fi
